# Code generated by font_to_py.py.
# Font: Open Sans.ttf
# Cmd: tools/micropython-font-to-py/font_to_py.py C:\Users\Tait (s201079928)\Documents\Fonts\Open Sans.ttf --xmap 28 -e 58 -s 48 -l 58 wasp/fonts/sans28.py
version = '0.33'

def height():
    return 28

def baseline():
    return 28

def max_width():
    return 22

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 48

def max_ch():
    return 58

_font =\
b'\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x0e\x00\x1e\x00\x1e\x00\x1e\x00\x0e\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x0e\x00\x1e\x00\x1e\x00\x1e\x00\x0e\x00\x16\x00\x00\xfc\x00\x03'\
b'\xff\x00\x07\xff\x80\x0f\x87\xc0\x0e\x01\xc0\x1e\x01\xe0\x1c\x00'\
b'\xe0\x1c\x00\xe0\x3c\x00\xf0\x38\x00\x70\x38\x00\x70\x38\x00\x70'\
b'\x38\x00\x70\x38\x00\x70\x38\x00\x70\x38\x00\x70\x38\x00\x70\x38'\
b'\x00\x70\x38\x00\x70\x3c\x00\xf0\x1c\x00\xe0\x1c\x00\xe0\x1e\x01'\
b'\xe0\x0e\x01\xc0\x0f\x87\xc0\x07\xff\x80\x03\xff\x00\x00\xfc\x00'\
b'\x16\x00\x00\x38\x00\x00\x78\x00\x00\xf8\x00\x03\xd8\x00\x07\xb8'\
b'\x00\x0f\x38\x00\x0e\x38\x00\x04\x38\x00\x00\x38\x00\x00\x38\x00'\
b'\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00'\
b'\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38'\
b'\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00'\
b'\x00\x38\x00\x00\x38\x00\x16\x00\x01\xfc\x00\x07\xff\x00\x1f\xff'\
b'\x80\x3f\x07\xc0\x18\x03\xc0\x00\x01\xe0\x00\x01\xe0\x00\x00\xe0'\
b'\x00\x01\xe0\x00\x01\xe0\x00\x01\xc0\x00\x01\xc0\x00\x03\x80\x00'\
b'\x07\x80\x00\x0f\x00\x00\x0e\x00\x00\x1c\x00\x00\x38\x00\x00\x70'\
b'\x00\x00\xe0\x00\x01\xc0\x00\x03\x80\x00\x07\x00\x00\x0e\x00\x00'\
b'\x1c\x00\x00\x3f\xff\xf0\x3f\xff\xf0\x3f\xff\xf0\x16\x00\x01\xfc'\
b'\x00\x0f\xff\x00\x1f\xff\x80\x3e\x07\xc0\x18\x01\xe0\x00\x01\xe0'\
b'\x00\x00\xe0\x00\x00\xe0\x00\x01\xe0\x00\x01\xc0\x00\x03\xc0\x00'\
b'\x0f\x80\x03\xfe\x00\x03\xfc\x00\x03\xff\x80\x00\x07\xc0\x00\x01'\
b'\xe0\x00\x00\xe0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0'\
b'\x00\x00\xe0\x00\x01\xe0\x38\x07\xc0\x3f\xff\x80\x3f\xff\x00\x07'\
b'\xfc\x00\x16\x00\x00\x07\x80\x00\x07\x80\x00\x0f\x80\x00\x1f\x80'\
b'\x00\x1f\x80\x00\x3b\x80\x00\x73\x80\x00\x73\x80\x00\xe3\x80\x01'\
b'\xc3\x80\x01\xc3\x80\x03\x83\x80\x07\x03\x80\x07\x03\x80\x0e\x03'\
b'\x80\x1c\x03\x80\x1c\x03\x80\x38\x03\x80\x70\x03\x80\x7f\xff\xf8'\
b'\x7f\xff\xf8\x7f\xff\xf8\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00'\
b'\x03\x80\x00\x03\x80\x00\x03\x80\x16\x00\x0f\xff\xc0\x0f\xff\xc0'\
b'\x0f\xff\xc0\x0e\x00\x00\x0e\x00\x00\x0e\x00\x00\x0e\x00\x00\x0e'\
b'\x00\x00\x0c\x00\x00\x1c\x00\x00\x1c\x00\x00\x1f\xfc\x00\x1f\xff'\
b'\x00\x1f\xff\xc0\x00\x07\xe0\x00\x01\xe0\x00\x00\xe0\x00\x00\xf0'\
b'\x00\x00\xf0\x00\x00\x70\x00\x00\xf0\x00\x00\xe0\x00\x00\xe0\x20'\
b'\x01\xe0\x3c\x07\xc0\x3f\xff\x80\x1f\xff\x00\x07\xf8\x00\x16\x00'\
b'\x00\x1f\xc0\x00\xff\xc0\x01\xff\xc0\x03\xe0\x00\x07\x80\x00\x0f'\
b'\x00\x00\x0e\x00\x00\x1e\x00\x00\x1c\x00\x00\x1c\x00\x00\x1c\x00'\
b'\x00\x3c\x7e\x00\x3d\xff\x80\x3b\xff\xc0\x3f\x83\xe0\x3e\x00\xe0'\
b'\x3c\x00\xf0\x3c\x00\x70\x38\x00\x70\x38\x00\x70\x1c\x00\x70\x1c'\
b'\x00\x70\x1e\x00\xf0\x0e\x00\xe0\x0f\x83\xe0\x07\xff\xc0\x03\xff'\
b'\x80\x00\xfe\x00\x16\x00\x3f\xff\xf0\x3f\xff\xf0\x3f\xff\xf0\x00'\
b'\x00\xf0\x00\x00\xe0\x00\x00\xe0\x00\x01\xc0\x00\x01\xc0\x00\x03'\
b'\x80\x00\x03\x80\x00\x07\x80\x00\x07\x00\x00\x0f\x00\x00\x0e\x00'\
b'\x00\x1e\x00\x00\x1c\x00\x00\x1c\x00\x00\x38\x00\x00\x38\x00\x00'\
b'\x78\x00\x00\x70\x00\x00\xf0\x00\x00\xe0\x00\x01\xe0\x00\x01\xc0'\
b'\x00\x03\xc0\x00\x03\x80\x00\x03\x80\x00\x16\x00\x01\xfe\x00\x07'\
b'\xff\x80\x0f\xff\xc0\x0f\x03\xc0\x1e\x01\xe0\x1c\x00\xe0\x1c\x00'\
b'\xe0\x1c\x00\xe0\x1c\x00\xe0\x1e\x01\xc0\x0f\x03\xc0\x07\xcf\x80'\
b'\x03\xfe\x00\x00\xfc\x00\x03\xff\x00\x07\x8f\x80\x0e\x03\xc0\x1c'\
b'\x01\xe0\x3c\x00\xf0\x38\x00\x70\x38\x00\x70\x38\x00\x70\x38\x00'\
b'\xf0\x3c\x00\xe0\x1f\x03\xe0\x0f\xff\xc0\x07\xff\x80\x01\xfe\x00'\
b'\x16\x00\x00\xfc\x00\x07\xff\x00\x0f\xff\x80\x1f\x07\xc0\x1e\x01'\
b'\xc0\x3c\x00\xe0\x38\x00\xe0\x38\x00\xe0\x38\x00\x70\x38\x00\x70'\
b'\x38\x00\x70\x3c\x00\xf0\x1c\x01\xf0\x1f\x07\xf0\x0f\xff\x70\x07'\
b'\xfe\x70\x01\xf8\xf0\x00\x00\xe0\x00\x00\xe0\x00\x00\xe0\x00\x01'\
b'\xe0\x00\x01\xc0\x00\x03\xc0\x00\x07\x80\x00\x1f\x00\x0f\xfe\x00'\
b'\x0f\xfc\x00\x0f\xe0\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0e\x00\x1e\x00\x1e\x00\x1e\x00\x0e\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0e\x00\x1e\x00\x1e\x00\x1e\x00\x0e\x00'\

_index =\
b'\x00\x00\x3a\x00\x90\x00\xe6\x00\x3c\x01\x92\x01\xe8\x01\x3e\x02'\
b'\x94\x02\xea\x02\x40\x03\x96\x03\xd0\x03'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 58 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 28
    return _mvfont[doff + 2:next_offs], 28, width
 
